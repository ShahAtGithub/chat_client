import Chat from '@/compononet/chat';
import List from '@/compononet/list';
import UserList from '@/compononet/userlist';
import Protected from '@/hooks/protected';
import API from '@/utils/apiConfig';
import Head from 'next/head'


// pages/index.js
import React, { useEffect, useState } from 'react';


const Home = () => {
  const [currentChatList, setcurrentChatList] = useState([])
  const [selectedUser, setSelectedUser] = useState("ram");
  const [isUserListClick, setisUserListClick] = useState(false)
  const [messages, setMessages] = useState([]);

  const [selectedChatId, setselectedChatId] = useState(null)

  const [allMessages, setAllMessages] = useState([])


  const getAllmessages=async()=>{
    
  }
  const handleUserSelect = (user) => {
    setSelectedUser(user);
    setMessages([]); // Clear messages when a new user is selected
  };
  const fecthcurrentchat=async()=>{
    try {
      const token=await localStorage.getItem("Token")
      const user=await localStorage.getItem("User")
      const config = {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      };
      API.get("chat",config).then((res)=>{
        const getAllchat=res.data.map((item)=>{
          const senderName=()=>{
            return item?.users[0]?._id==JSON.parse(user)?._id ? item.users[1] :item.users[0]
          }          
          return{
            id:item._id,
            latestmessages:item?.latestMessage?.content,
            senderName: senderName(),
            isNewMessage: item?.latestMessage?.sender?._id == JSON.parse(user)?._id ?false :true
          }
        })
        setcurrentChatList([...getAllchat])
        console.log(getAllchat)
      }).catch((err)=>console.log(err))

      
    } catch (error) {
      console.log(error)
      
    }
  }

  const handleSendMessage = () => {
    // Implement sending a message and updating the state here
  };

  useEffect(() => {
    fecthcurrentchat()

    
  
   
  }, [])
  const createNewChat=async(id)=>{
   try {
    const token=await localStorage.getItem("Token")
    const config = {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      };
    await API("chat",config,{
      userId:id
    }).then((res)=>alert(JSON.stringify(res))).catch((err)=>console.log(err))
    
   } catch (error) {
    
   }

  }
  console.log(currentChatList)
  

  return (
    <>
    <Head>
        <title>Contacts</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <Protected>
      <List isOpen={isUserListClick} setIsOpen={setisUserListClick} onPress={createNewChat} />
       <button onClick={()=>setisUserListClick(true)} style={{cursor:'pointer'}}> New Chat </button>
    <div style={{
      display:'flex',
      flexDirection:'row'
    }}>
      <UserList users={currentChatList} onUserSelect={handleUserSelect} />
      <Chat selectedUser={selectedUser} messages={messages} onSendMessage={handleSendMessage} />
    </div>
    </Protected>
    </>
  );
};

export default Home;
